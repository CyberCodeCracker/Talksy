/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { firstValueFrom } from 'rxjs';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { ChatResponse } from '../models/chat-response';
import { createChat } from '../fn/chat/create-chat';
import { CreateChat$Params } from '../fn/chat/create-chat';
import { getAllChatsByRecipientId } from '../fn/chat/get-all-chats-by-recipient-id';
import { GetAllChatsByRecipientId$Params } from '../fn/chat/get-all-chats-by-recipient-id';


/**
 * Chat API
 */
@Injectable({ providedIn: 'root' })
export class ChatService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `createChat()` */
  static readonly CreateChatPath = '/api/v1/chats/create-chat';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `createChat()` instead.
   *
   * This method doesn't expect any request body.
   */
  createChat$Response(params: CreateChat$Params, context?: HttpContext): Promise<StrictHttpResponse<number>> {
    const obs = createChat(this.http, this.rootUrl, params, context);
    return firstValueFrom(obs);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `createChat$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  createChat(params: CreateChat$Params, context?: HttpContext): Promise<number> {
    const resp = this.createChat$Response(params, context);
    return resp.then((r: StrictHttpResponse<number>): number => r.body);
  }

  /** Path part for operation `getAllChatsByRecipientId()` */
  static readonly GetAllChatsByRecipientIdPath = '/api/v1/chats/get-chats';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getAllChatsByRecipientId()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAllChatsByRecipientId$Response(params?: GetAllChatsByRecipientId$Params, context?: HttpContext): Promise<StrictHttpResponse<Array<ChatResponse>>> {
    const obs = getAllChatsByRecipientId(this.http, this.rootUrl, params, context);
    return firstValueFrom(obs);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getAllChatsByRecipientId$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAllChatsByRecipientId(params?: GetAllChatsByRecipientId$Params, context?: HttpContext): Promise<Array<ChatResponse>> {
    const resp = this.getAllChatsByRecipientId$Response(params, context);
    return resp.then((r: StrictHttpResponse<Array<ChatResponse>>): Array<ChatResponse> => r.body);
  }

}
